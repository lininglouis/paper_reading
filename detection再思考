
-------------------------------------------
做detection的直接任务是输出cls和bbox。但是因为detection实质其实还是用滑动窗口（卷积）把各种位置各自大小ratio都暴力猜一遍，它猜了好多次，所以最终还是需要confidence(conf)来帮忙确定最终需要输出的bbox和cls。
所以解决detection任务，cls，bbox，和conf这三个因素都得有。我觉得
1） fastercnn，在rpn解决了bbox和conf的问题。 在rcnn阶段主要解决的是cls细分类的问题。（理论上讲rpn的bbox预测的好，rcnn都可以不用计算回归，只用算cls就好了。）
2） yolo是通过一个训练过程，解决cls,bbox,conf三个问题。这个更困难，就牵扯到下一个问题

------------检测样本不均衡的问题-------------------------
fastercnn对前后景做二分类，然后对前景做细分类。有点分类上做级联的感觉。
yolo直接对(背景类)和(前景的各种小类)，直接一起做细分类。
detection任务本来背景样本就多，前景样本就少。现在yolo还要把前景样本再分成20个类（比如VOC)，这样yolo的(背景和各个前景)的样本分布就更加不平衡了。
理论上来说，如果样本不均衡，能够得到解决，就不需要fastercnn做级联。但是focalloss出来之后，好像没有撼动fastercnn的地位？为什么？

------------------------------------------------
 
是不是因为fastercnn 的级联有什么好处？ 比如bbox回归。fastercnn 在rpn阶段预测了bbox，然后在rcnn又预测了bbox，这样其实做了两次box regression refinement。（rpn和rcnn这两个过程的box refinement是联合训练的。 只不过一个rpn的bbox是和二分类一起输出的，rcnn的是和前景细分类一起输出的。那么这两个过程，对boxrefine的优化效果贡献一样么？ 如果主要是rpn的box reg在起作用，那么干脆都放在rpn做回归得了。。但是事实好像不是这样，加上rcnn的效果就是比单独训练rpn的box regression要好）
cascade rcnn，如果有rcnn三次级联，那么加上rpn的回归，其实一共有四次在做bbox级联回归。是不是级联的思想，除了解决样本不平衡的问题之外，有什么其他效果呢？

--------------------------
那么级联的极限是什么？ 如果级联是好的，那么级联多少次准确率会收敛？ 为什么cascade rcnn做四次级联五次级联就效果差了呢？
